package redeneural.gui;

import java.awt.Cursor;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;
import redeneural.io.AmostrasIO;
import redeneural.model.Projeto;

/**
 *
 * @author Michael Murussi
 */
public class AmostrasJPanel extends javax.swing.JPanel implements UpdateContent {

    private final ColetaAmostraPanel coletaAmostraPanel;
    private double[][] amostrasTreinamento;
    private double[][] amostrasValidacao;

    /**
     * Creates new form AmostrasJPanel
     * @param projeto
     */
    public AmostrasJPanel(Projeto projeto) {
        initComponents();

        this.fileChooser = FileChooserUtil.getNewFileChooser(
                FileChooserUtil.FILE_FILTER_XLS,
                FileChooserUtil.FILE_FILTER_XLSX,
                FileChooserUtil.FILE_FILTER_CSV
        );

        this.coletaAmostraPanel = new ColetaAmostraPanel(projeto, this);
        jTabbedPane1.insertTab("Coleta", null, coletaAmostraPanel, null, 0);
        jTabbedPane1.setSelectedIndex(0);
    }

    public final void setProjeto(Projeto projeto) {
        this.coletaAmostraPanel.setProjeto(projeto);
    }

    public double[][] getAmostrasTreinamento() {
        return amostrasTreinamento;
    }

    public void setAmostrasTreinamento(double[][] amostrasTreinamento) {
        this.amostrasTreinamento = amostrasTreinamento;
        amostrasTreinamentoTableModel.fireTableStructureChanged();
        amostrasTreinamentoTableModel.fireTableDataChanged();
    }

    public double[][] getAmostrasValidacao() {
        return amostrasValidacao;
    }

    public void setAmostrasValidacao(double[][] amostrasValidacao) {
        this.amostrasValidacao = amostrasValidacao;
        amostrasValidacaoTableModel.fireTableStructureChanged();
        amostrasValidacaoTableModel.fireTableDataChanged();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        panelTreinamento = new javax.swing.JPanel();
        btnAbrirTreinamento = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAmostrasTreinamento = new javax.swing.JTable();
        btnSalvarTreinamento = new javax.swing.JButton();
        panelValidacao = new javax.swing.JPanel();
        btnAbrirValidacao = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAmostrasValidacao = new javax.swing.JTable();
        btnSalvarValidacao = new javax.swing.JButton();

        btnAbrirTreinamento.setText("Abrir");
        btnAbrirTreinamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbrirTreinamentoActionPerformed(evt);
            }
        });

        tblAmostrasTreinamento.setModel(this.amostrasTreinamentoTableModel);
        tblAmostrasTreinamento.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblAmostrasTreinamento);

        btnSalvarTreinamento.setText("Salvar");
        btnSalvarTreinamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarTreinamentoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelTreinamentoLayout = new javax.swing.GroupLayout(panelTreinamento);
        panelTreinamento.setLayout(panelTreinamentoLayout);
        panelTreinamentoLayout.setHorizontalGroup(
            panelTreinamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTreinamentoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelTreinamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 615, Short.MAX_VALUE)
                    .addGroup(panelTreinamentoLayout.createSequentialGroup()
                        .addComponent(btnAbrirTreinamento)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSalvarTreinamento)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        panelTreinamentoLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAbrirTreinamento, btnSalvarTreinamento});

        panelTreinamentoLayout.setVerticalGroup(
            panelTreinamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTreinamentoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelTreinamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAbrirTreinamento)
                    .addComponent(btnSalvarTreinamento))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 401, Short.MAX_VALUE)
                .addContainerGap())
        );

        panelTreinamentoLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAbrirTreinamento, btnSalvarTreinamento});

        jTabbedPane1.addTab("Treinamento", panelTreinamento);

        btnAbrirValidacao.setText("Abrir");
        btnAbrirValidacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbrirValidacaoActionPerformed(evt);
            }
        });

        tblAmostrasValidacao.setModel(this.amostrasValidacaoTableModel);
        tblAmostrasValidacao.getTableHeader().setResizingAllowed(false);
        jScrollPane2.setViewportView(tblAmostrasValidacao);

        btnSalvarValidacao.setText("Salvar");
        btnSalvarValidacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarValidacaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelValidacaoLayout = new javax.swing.GroupLayout(panelValidacao);
        panelValidacao.setLayout(panelValidacaoLayout);
        panelValidacaoLayout.setHorizontalGroup(
            panelValidacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelValidacaoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelValidacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 615, Short.MAX_VALUE)
                    .addGroup(panelValidacaoLayout.createSequentialGroup()
                        .addComponent(btnAbrirValidacao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSalvarValidacao)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelValidacaoLayout.setVerticalGroup(
            panelValidacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelValidacaoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelValidacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAbrirValidacao)
                    .addComponent(btnSalvarValidacao))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 401, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Validação", panelValidacao);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAbrirTreinamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbrirTreinamentoActionPerformed
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            try {
                amostrasTreinamento = AmostrasIO.load(fileChooser.getSelectedFile());
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "Arquivo não encontrado!", "Erro", JOptionPane.ERROR_MESSAGE);
            } catch (IOException | RuntimeException ex) {
                JOptionPane.showMessageDialog(null, ex.toString(), "Erro", JOptionPane.ERROR_MESSAGE);
            } finally {
                setCursor(null);
            }

            amostrasTreinamentoTableModel.fireTableStructureChanged();
            amostrasTreinamentoTableModel.fireTableDataChanged();
        }
    }//GEN-LAST:event_btnAbrirTreinamentoActionPerformed

    private void btnAbrirValidacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbrirValidacaoActionPerformed
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            try {
                amostrasValidacao = AmostrasIO.load(fileChooser.getSelectedFile());
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "Arquivo não encontrado!", "Erro", JOptionPane.ERROR_MESSAGE);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, ex.toString(), "Erro", JOptionPane.ERROR_MESSAGE);
            } finally {
                setCursor(null);
            }

            amostrasValidacaoTableModel.fireTableStructureChanged();
            amostrasValidacaoTableModel.fireTableDataChanged();
        }
    }//GEN-LAST:event_btnAbrirValidacaoActionPerformed

    private void btnSalvarTreinamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarTreinamentoActionPerformed
        
        if (amostrasTreinamento == null || amostrasTreinamento.length == 0) {
            return;
        }

        if (fileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {

            File file = FileChooserUtil.getSelectedFileWithExtension(fileChooser);

            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            try {
                AmostrasIO.write(file, amostrasTreinamento);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, ex.toString(), "Erro", JOptionPane.ERROR_MESSAGE);
            } finally {
                setCursor(null);
            }
        }
    }//GEN-LAST:event_btnSalvarTreinamentoActionPerformed

    private void btnSalvarValidacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarValidacaoActionPerformed
        if (amostrasValidacao == null || amostrasValidacao.length == 0) {
            return;
        }

        if (fileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {

            File file = FileChooserUtil.getSelectedFileWithExtension(fileChooser);

            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            try {
                AmostrasIO.write(file, amostrasValidacao);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, ex.toString(), "Erro", JOptionPane.ERROR_MESSAGE);
            } finally {
                setCursor(null);
            }
        }
    }//GEN-LAST:event_btnSalvarValidacaoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAbrirTreinamento;
    private javax.swing.JButton btnAbrirValidacao;
    private javax.swing.JButton btnSalvarTreinamento;
    private javax.swing.JButton btnSalvarValidacao;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel panelTreinamento;
    private javax.swing.JPanel panelValidacao;
    private javax.swing.JTable tblAmostrasTreinamento;
    private javax.swing.JTable tblAmostrasValidacao;
    // End of variables declaration//GEN-END:variables

    private final JFileChooser fileChooser;

    private AmostrasTableModel amostrasTreinamentoTableModel = new AmostrasTableModel() {

        @Override
        protected double[][] getDados() {
            return amostrasTreinamento;
        }

    };

    private final AmostrasTableModel amostrasValidacaoTableModel = new AmostrasTableModel() {

        @Override
        protected double[][] getDados() {
            return amostrasValidacao;
        }

    };

    @Override
    public void updateContent() {
        this.coletaAmostraPanel.updateContent();
    }

    private abstract class AmostrasTableModel extends AbstractTableModel {

        Class[] types = new Class[]{
            java.lang.Integer.class, java.lang.Double.class
        };

        protected abstract double[][] getDados();

        @Override
        public Class getColumnClass(int columnIndex) {
            return (columnIndex == 0 ? types[0] : types[1]);
        }

        @Override
        public String getColumnName(int column) {
            return (column == 0 ? "P" : String.valueOf(column));
        }

        @Override
        public int getRowCount() {
            return (getDados() == null ? 0 : getDados().length);
        }

        @Override
        public int getColumnCount() {
            return (getDados() != null && getDados().length > 0 ? getDados()[0].length + 1 : 0);
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            if (columnIndex == 0) {
                return rowIndex;
            } else {
                return getDados()[rowIndex][columnIndex - 1];
            }
        }

    };

}
